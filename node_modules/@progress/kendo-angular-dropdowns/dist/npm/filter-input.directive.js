"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
/**
 * @hidden
 */
var FilterInputDirective = /** @class */ (function () {
    function FilterInputDirective(element, differs) {
        this.element = element;
        this.differs = differs;
    }
    Object.defineProperty(FilterInputDirective.prototype, "focused", {
        get: function () {
            return this._focused;
        },
        set: function (value) {
            this._focused = value;
            if (!this.differ && this.focused) {
                //differ does not work with Boolean, that is why we wrap it in an object
                this.differ = this.differs.find({ focused: this.focused }).create();
            }
        },
        enumerable: true,
        configurable: true
    });
    FilterInputDirective.prototype.ngDoCheck = function () {
        if (this.differ) {
            //differ does not work with Boolean, that is why we wrap it in an object
            var focusChanges = this.differ.diff({ focused: this.focused });
            if (focusChanges && this.focused) {
                this.element.nativeElement.focus();
            }
        }
    };
    FilterInputDirective.decorators = [
        { type: core_1.Directive, args: [{
                    selector: '[filterInput]' // tslint:disable-line
                },] },
    ];
    /** @nocollapse */
    FilterInputDirective.ctorParameters = function () { return [
        { type: core_1.ElementRef, },
        { type: core_1.KeyValueDiffers, },
    ]; };
    FilterInputDirective.propDecorators = {
        'focused': [{ type: core_1.Input, args: ['filterInput',] },],
    };
    return FilterInputDirective;
}());
exports.FilterInputDirective = FilterInputDirective;
