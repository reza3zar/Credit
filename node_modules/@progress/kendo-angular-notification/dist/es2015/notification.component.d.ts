import { EventEmitter, TemplateRef, ChangeDetectorRef, ElementRef, AfterContentInit, OnInit, ComponentRef, OnDestroy } from '@angular/core';
import { AnimationBuilder } from '@angular/animations';
import { Subscription } from 'rxjs/Subscription';
import { Type } from './models/type';
import { Animation } from './models/animation';
import { LocalizationService } from '@progress/kendo-angular-l10n';
/**
 * @hidden
 *
 */
export declare class NotificationComponent implements OnInit, AfterContentInit, OnDestroy {
    cdr: ChangeDetectorRef;
    private element;
    private builder;
    container: any;
    closeClickSubscription: Subscription;
    close: EventEmitter<any>;
    templateRef?: TemplateRef<any>;
    templateString?: string;
    width?: number;
    height?: number;
    hideAfter?: number;
    closable?: boolean;
    type?: Type;
    animation?: Animation;
    /**
     * @hidden
     */
    direction: string;
    readonly containerClass: boolean;
    animating: boolean;
    private defaultHideAfter;
    private hideTimeout;
    private animationEnd;
    private dynamicRTLSubscription;
    private rtl;
    constructor(cdr: ChangeDetectorRef, element: ElementRef, builder: AnimationBuilder, localizationService: LocalizationService);
    notificationClasses(): string;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    ngAfterContentInit(): void;
    typeClass(): string;
    typeIconClass(): string;
    onCloseClick(): void;
    hide(customComponent?: ComponentRef<any>): void;
    private setHideTimeout();
    private emitClose(customComponent?);
    private play(animation, animatedElement);
    private animate(animation, onclose?);
    private slideAnimation(height, duration, onclose?);
    private fadeAnimation(duration, onclose?);
}
