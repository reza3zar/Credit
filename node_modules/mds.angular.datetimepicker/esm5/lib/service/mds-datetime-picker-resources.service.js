/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var MdsDatetimePickerResourcesService = /** @class */ (function () {
    function MdsDatetimePickerResourcesService() {
        this.persianResources = {
            'Year': 'سال',
            'Month': 'ماه',
            'Day': 'روز',
            'PreviousYear': 'سال قبل',
            'PreviousMonth': 'ماه قبل',
            'NextYear': 'سال بعد',
            'NextMonth': 'ماه بعد',
            'SelectMonth': 'انتخاب ماه',
            'Today': 'امروز',
            'Confirm': 'تایید',
            'Reject': 'رد',
            'Start': 'شروع',
            'End': 'پایان'
        };
        this.englishResources = {
            'Year': 'Year',
            'Month': 'Month',
            'Day': 'Day',
            'PreviousYear': 'Previous Year',
            'PreviousMonth': 'Previous Month',
            'NextYear': 'Next Year',
            'NextMonth': 'Next Month',
            'SelectMonth': 'Select Month',
            'Today': 'Today',
            'Confirm': 'Confirm',
            'Reject': 'Reject',
            'Start': 'Start',
            'End': 'End'
        };
    }
    MdsDatetimePickerResourcesService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ MdsDatetimePickerResourcesService.ngInjectableDef = i0.defineInjectable({ factory: function MdsDatetimePickerResourcesService_Factory() { return new MdsDatetimePickerResourcesService(); }, token: MdsDatetimePickerResourcesService, providedIn: "root" });
    return MdsDatetimePickerResourcesService;
}());
export { MdsDatetimePickerResourcesService };
if (false) {
    /** @type {?} */
    MdsDatetimePickerResourcesService.prototype.persianResources;
    /** @type {?} */
    MdsDatetimePickerResourcesService.prototype.englishResources;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRzLWRhdGV0aW1lLXBpY2tlci1yZXNvdXJjZXMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21kcy5hbmd1bGFyLmRhdGV0aW1lcGlja2VyLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2UvbWRzLWRhdGV0aW1lLXBpY2tlci1yZXNvdXJjZXMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFM0M7SUFBQTtRQUlFLHFCQUFnQixHQUFHO1lBQ2pCLE1BQU0sRUFBRSxLQUFLO1lBQ2IsT0FBTyxFQUFFLEtBQUs7WUFDZCxLQUFLLEVBQUUsS0FBSztZQUNaLGNBQWMsRUFBRSxTQUFTO1lBQ3pCLGVBQWUsRUFBRSxTQUFTO1lBQzFCLFVBQVUsRUFBRSxTQUFTO1lBQ3JCLFdBQVcsRUFBRSxTQUFTO1lBQ3RCLGFBQWEsRUFBRSxZQUFZO1lBQzNCLE9BQU8sRUFBRSxPQUFPO1lBQ2hCLFNBQVMsRUFBRSxPQUFPO1lBQ2xCLFFBQVEsRUFBRSxJQUFJO1lBQ2QsT0FBTyxFQUFFLE1BQU07WUFDZixLQUFLLEVBQUUsT0FBTztTQUNmLENBQUM7UUFDRixxQkFBZ0IsR0FBRztZQUNqQixNQUFNLEVBQUUsTUFBTTtZQUNkLE9BQU8sRUFBRSxPQUFPO1lBQ2hCLEtBQUssRUFBRSxLQUFLO1lBQ1osY0FBYyxFQUFFLGVBQWU7WUFDL0IsZUFBZSxFQUFFLGdCQUFnQjtZQUNqQyxVQUFVLEVBQUUsV0FBVztZQUN2QixXQUFXLEVBQUUsWUFBWTtZQUN6QixhQUFhLEVBQUUsY0FBYztZQUM3QixPQUFPLEVBQUUsT0FBTztZQUNoQixTQUFTLEVBQUUsU0FBUztZQUNwQixRQUFRLEVBQUUsUUFBUTtZQUNsQixPQUFPLEVBQUUsT0FBTztZQUNoQixLQUFLLEVBQUUsS0FBSztTQUNiLENBQUE7S0FDRjs7Z0JBbENBLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs0Q0FKRDtDQW9DQyxBQWxDRCxJQWtDQztTQS9CWSxpQ0FBaUM7OztJQUM1Qyw2REFjRTs7SUFDRiw2REFjQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIE1kc0RhdGV0aW1lUGlja2VyUmVzb3VyY2VzU2VydmljZSB7XHJcbiAgcGVyc2lhblJlc291cmNlcyA9IHtcclxuICAgICdZZWFyJzogJ9iz2KfZhCcsXHJcbiAgICAnTW9udGgnOiAn2YXYp9mHJyxcclxuICAgICdEYXknOiAn2LHZiNiyJyxcclxuICAgICdQcmV2aW91c1llYXInOiAn2LPYp9mEINmC2KjZhCcsXHJcbiAgICAnUHJldmlvdXNNb250aCc6ICfZhdin2Ycg2YLYqNmEJyxcclxuICAgICdOZXh0WWVhcic6ICfYs9in2YQg2KjYudivJyxcclxuICAgICdOZXh0TW9udGgnOiAn2YXYp9mHINio2LnYrycsXHJcbiAgICAnU2VsZWN0TW9udGgnOiAn2KfZhtiq2K7Yp9ioINmF2KfZhycsXHJcbiAgICAnVG9kYXknOiAn2KfZhdix2YjYsicsXHJcbiAgICAnQ29uZmlybSc6ICfYqtin24zbjNivJyxcclxuICAgICdSZWplY3QnOiAn2LHYrycsXHJcbiAgICAnU3RhcnQnOiAn2LTYsdmI2LknLFxyXG4gICAgJ0VuZCc6ICfZvtin24zYp9mGJ1xyXG4gIH07XHJcbiAgZW5nbGlzaFJlc291cmNlcyA9IHtcclxuICAgICdZZWFyJzogJ1llYXInLFxyXG4gICAgJ01vbnRoJzogJ01vbnRoJyxcclxuICAgICdEYXknOiAnRGF5JyxcclxuICAgICdQcmV2aW91c1llYXInOiAnUHJldmlvdXMgWWVhcicsXHJcbiAgICAnUHJldmlvdXNNb250aCc6ICdQcmV2aW91cyBNb250aCcsXHJcbiAgICAnTmV4dFllYXInOiAnTmV4dCBZZWFyJyxcclxuICAgICdOZXh0TW9udGgnOiAnTmV4dCBNb250aCcsXHJcbiAgICAnU2VsZWN0TW9udGgnOiAnU2VsZWN0IE1vbnRoJyxcclxuICAgICdUb2RheSc6ICdUb2RheScsXHJcbiAgICAnQ29uZmlybSc6ICdDb25maXJtJyxcclxuICAgICdSZWplY3QnOiAnUmVqZWN0JyxcclxuICAgICdTdGFydCc6ICdTdGFydCcsXHJcbiAgICAnRW5kJzogJ0VuZCdcclxuICB9XHJcbn1cclxuIl19